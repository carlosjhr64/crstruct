#! ruby
require 'test/unit'
require 'crstruct'

class Tests < Test::Unit::TestCase
  def test_standard_open
    s = CRStruct::Open.new
    s.a = "A"
    assert_equal "A", s.a
    error = assert_raise(FrozenError){ s.a = "A" }
    assert_equal "can't modify CRStruct method: :a", error.message
    assert_raise(NoMethodError){ s.b }
  end

  def test_standard_registered
    s = CRStruct::Registered.new :a, :b, :c
    s.b = "B"
    assert_equal "B", s.b
    error = assert_raise(KeyError){ s.d = "D" }
    assert_equal "can't add unregistered key: :d", error.message
  end

  def test_edge_cases
    s = CRStruct::Open.new
    assert_raise(NoMethodError){s.wut{'wut'}}
    assert_raise(NoMethodError){s.wut('wut','wut')}
    assert_raise(NoMethodError){s.wut!}
    assert_raise(NoMethodError){s.wut?}
    assert_raise(NoMethodError){s.wut('wut')}
    # And nothing wrong with wut...
    s.wut = 'wut'
    assert_equal 'wut', s.wut
  end

  def test_more_edges
    s1 = CRStruct::Open.new
    s2 = CRStruct::Open.new
    s1.x = 1.1
    s1.y = 'Y'
    s2.x = 2.2
    s2.z = 'Z'
    assert_equal 1.1, s1.x
    assert_equal 'Y', s1.y
    assert_equal 2.2, s2.x
    assert_equal 'Z', s2.z
  end
end
